-----------------------------------------------------------0-----------------------------------------------------------
0X0: 
     [07.11]两名中国“ATM黑客”遭巴基斯坦警方调查 

700)this.width=700" >图片:Q1.JPG



-----------------------------------------------------------1-----------------------------------------------------------
0X1: 
     [07.11]来自入侵美国民主党委员会的黑客自白书 

700)this.width=700" >图片:A1.JPG



-----------------------------------------------------------2-----------------------------------------------------------
0X2: 
     [07.11]Flash XSS检测脚本的简单实现 



前言

这里主要是讲如何快速扫描到有问题的flash文件，用于批量，有时候很笨的方法也会有奇效，下面记录一下在实现过程中的一些思路和遇到的一些坑。
700)this.width=700" >图片:a1.JPG



-----------------------------------------------------------3-----------------------------------------------------------
0X3: 
     [07.11]揭秘Patchwork APT攻击 ：一个与中国南海和东南亚问题相关的网络攻击组织 

=700) window.open('http://image.3001.net/images/20160708/14679670524095.jpg!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------4-----------------------------------------------------------
0X4: 
     [07.11]Android木马如何实现用户定位技术？ 

这几年安卓系统的普及速度可谓迅猛，一时间各式各样的设备都承载着安卓系统，手机、平板、机顶盒等都忠实地成为了安卓系统的用户。由于安卓系统在移动设备上的使用率最高，而移动设备上存储的数据往往涉及到个人隐私，如手机通讯录、短信内容、拍摄照片、阅读书目、保存文档等，有时更会涉及到经济利益，这诱惑着一些利益集团开始制作基于安卓系统的远程控制程序，即安卓系统木马。
700)this.width=700" >图片:a1.JPG



-----------------------------------------------------------5-----------------------------------------------------------
0X5: 
     [07.06]短讯：黑客公布Myspace泄露数据 

最近，Twitter 名为@CthulhuSec的用户曝光了大量Myspace数据信息，声称这些信息为Myspace早前几年泄露的相关信息，但他本人不敢对信息真实性提供保证，本着数据有用原则，希望下载者能负责任地使用这些信息。700)this.width=700" >图片:a1.jpg



-----------------------------------------------------------6-----------------------------------------------------------
0X6: 
     [07.06]微软致Office 365用户：小心0day勒索软件 

700)this.width=700" >图片:q1.png



-----------------------------------------------------------7-----------------------------------------------------------
0X7: 
     [07.06]如何逆向破解HawkEye keylogger键盘记录器，进入攻击者邮箱？ 

这一切要从一次恶意邮件攻击活动开始。下图为我们最近监测到的一个以恶意文件为发送附件的邮件攻击，请注意邮件信息中的英语写作水平是多么差劲，其实，这也是恶意邮件的一个特点，还请收件人提高警惕。700)this.width=700" >图片:a1.jpg



-----------------------------------------------------------8-----------------------------------------------------------
0X8: 
     [07.06]一家中国广告公司，如何利用恶意软件感染全球8500万台手机 

最近Check Point发布了一份非常详细的报告，谈到一款名为HummingBad的Android恶意程序。此恶意程序在行为方式上和先前一些相当霸道的Android恶意程序类似，不过它有几大亮点：其一背后操纵者来自中国重庆（注意下面还有地址哦…）；其二其感染范围极为广泛，Check Point研究人员表示，HummingBad估计已经感染了8500万台设备。700)this.width=700" >图片:q1.jpg



-----------------------------------------------------------9-----------------------------------------------------------
0X9: 
     Windows 10免费升级截止不到一个月，升级提醒变成全萤幕了 

 
Windows10免费升级将在7月29日截止，微软为加速用户升级到最新作业系统，将升级提醒从小视窗提高到全萤幕显示，以斗大的画面提醒用户尽快决定是否升级，用户依自身需要可选择立即更新、稍后提醒或是不要再通知。
 
700)this.width=700" >图片:z1.jpg



-----------------------------------------------------------10-----------------------------------------------------------
0X10: 
     [07.06]恶意诈骗攻击如何搞臭你的品牌并且毁掉你的生意？ 

欺就是欺瞒诈骗的意思。攻击者每天不断的使用诈骗手法，窃取企业使用者的信用资料，包括透过网路钓鱼和植入在企业网站的恶意软体。你不允许员工浏览那些不知名网站，但如果是BBC、Newsweek、The NewYork Times或者MSN呢？最近这些都成为恶意广告(malvertising)的受害者－恶意人士透过线上广告公司在这些顶尖网站散布携载恶意软体的线上广告。当然，我知道你有防毒软体。不过，FiveHabits Of Highly Successful Malware指出，在真实世界被防毒软体捕捉到的恶意软体只占了25%。你为员工举办过多次资安研讨会，教导他们辨识网路钓鱼威胁。然而，仍有将近50%受害者在收到网路钓鱼邮件的第一个小时内打开邮件并点击内文的连结。
别忘了，人们经常使用线上银行服务，这正是恶意人士频繁利用网路钓鱼和恶意软体攻击的目标。根据IDC调查，办公室的网际网路连线时间有30-40%是用在与工作无关的活动。这或许说明了为何F5安全营运中心(SOC)发现平日的网路钓鱼活动显著高于周末，尤以星期一最为猖獗。如果员工在星期一早上使用线上银行并且成为网路钓鱼攻击的受害者，那么不但员工个人的财务信用资讯会被窃取，公司资料也很可能落入恶意人士手中。防毒软体无法捕捉所有威胁，人们仍继续成为网路钓鱼攻击的受害者，公司资料在市场上如同其他资讯一样具有买卖价值。
有些员工透过SSL VPN或其他「保护」的入口网站，从企业防火墙之外存取公司资产。此时，那潜伏在员工浏览器的恶意软体并不在意它所窃取的是公司或消费者相关信用资料。不论何者，对于攻击者而言都是有价值的－他们既然花了那么大的功夫感染装置，何不尽量挖宝？
事实是，对于金融服务与银行而言，诈欺并不算是特别意外的威胁。他们是受害最大且承受的冲击也最立即，因为恶意人士瞄准的是我们委托银行帮忙管理的金钱。但如果你回想过去几年一些重大的资安事件，就会发现大多数的根本原因在于：信用窃盗。窃取信用资料的途径包括透过网路钓鱼或恶意软体直接骗取，或者透过木马程式绕过传统侦测系统侵入你的网路。他们的目标就是资料，不论客户或公司资料。
资料外泄事件的代价远超乎技术与营运成本。
 
品牌与商业冲击
 
 
当然，还有复原与清理成本。资源必须重新配置以根除网路钓鱼攻击所遗留下的每一个恶意软体和后门漏洞。桌上电脑要进行抹除并重新安装，以清除路过下载(drive-bydownloads)或恶意广告程式。这确定会对IT和商业部门造成严重的生产力损失，冲击你的商业利润。
再来就是品牌冲击，Twitters被负面留言灌爆，你的品牌一夕之间变成被嘲弄的对象。
一旦清理好桌上电脑并安装上更强大的保护后，资料外泄的冲击余波仍继续打击你的品牌声誉，而你必须处理这个问题。最近的一项研究调查显示，超过一半(57%)企业承认安全事件对他们的声誉造成负面冲击，使得中小企业损失超过8,000美元，而大型企业损失超过20万美元。其中有些费用是用于聘请外包厂商协助处理被灌爆的抱怨、答覆问题和提供建议。另外有些则是因应客户期待而支出的成本，包括建立身分识别窃盗保护(63%)、信用监控服务(58%)，以及提供现金、产品或服务等形式的补偿(67%)。
客户流失也包含在这些损失项目，因为品牌是消费者采购决策的重要因素。虽然价格通常被认为是第一要素，不过价格的考量和品牌声誉之间是相关联的。客户愿意为一个良好声誉的品牌付出更多成本，因此当遭受安全事件后必须尽可能快速的修补你的品牌信誉。
损害并非局限于消费者－尽管这通常会被优先检视，公司的人才招募也会受到冲击。要吸引优秀的人才就必须付出成本，EmployerBranding Global Trends报告指出优良的品牌雇主可以节省22%人才招募费用。当然，这是假设你有兴趣吸收人才。同样的调查也发现，人们在找新工作时，45%会将一般人对公司的评价列为重要考虑因素。品牌影响人们去一家公司工作的意愿，因此安全事件会对你的人才招募造成负面冲击。
 
排除网路诈欺威胁
 
 
好消息是，我们可以借助一些工具来舒缓网路钓鱼和恶意软体威胁。那些工具通常被归类为反诈欺，且经常与金融、银行及其他和财务相关产业相提并论。不过，唯有当人们认真防范诈欺，才能藉由这些方案获得保护，避免恶意人士利用网路应用和技术骗取个人信用资讯。
网路诈欺方案的目的是要找出并预防信用窃盗，避免让攻击者利用这些信用凭证去入侵系统。他们窃取的究竟是现金或资料并无关紧要，因为他们一旦搜集到凭证资料后就会继续窃取其他任何资料，而不论其属于公司或消费者所有。如果员工使用一台遭入侵的机器连接公司资源，恶意人士就能借此取得公司凭证资料和其他任何资料－这是任何行业都必须重视的威胁。
 





-----------------------------------------------------------11-----------------------------------------------------------
0X11: 
     [07.06]高通芯片存缺陷，可破解Android全磁盘加密 

700)this.width=700" >图片:A1.JPG



-----------------------------------------------------------12-----------------------------------------------------------
0X12: 
     Blue Coat：SSL加密流量很安全？其实里面躲满了恶意软体 

1994年马克安德森(MarcLowell Andreessen)创办第一个商用浏览器－Netscape时，曾预言未来「所有软体都将透过浏览器来执行」。然而，马克安德森猜对了开头，却没猜中结尾：「Web也成为世界上最大的安全威胁来源」。
因为Web App的使用与重要性日益遽增，大量的使用者资料在网际网路之间不断流窜，因此首先我们注意到了加密流量的重要性，让端点与Web伺服器之间的流量封包进行加密，不被中间任何路由器拦截，也促成了SSL、TLS等加密技术的蓬勃发展。
这原本是件好事，一般大众也总以为「只要能加密，肯定有安全」。然而，技术本位的骇客们，并没有放过将「加密技术转为骇客工具」的机会，原本在Web世界中四处肆虐的恶意软体(Malware)，为了闪避在明码传输的HTTP流量中被安全装置抓出来的可能性，干脆也转用加密传输的HTTPS/SSL流量，除了用来感染端点电脑之外，也用来传输从端点窃取到的资料至恶意软体伺服器。
「这的确让不少传统的安全设备失效了，尤其是防火墙，碰到加密流量，通常也只能放行(pass)，」 BlueCoat新加坡亚太区技术长MatthiasYeo表示：「这无疑是替企业的网路边界安全开了后门，也是目前BlueCoat所看见急遽发生的安全威胁。」=700) window.open('https://bbs.2cto.com/attachment/Mon_1607/33_760169_7f22e396e679705.jpg?33')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >图片:z1.JPG



-----------------------------------------------------------13-----------------------------------------------------------
0X13: 
     勒索软体已成全球危机安全产业如何以更创新的手法来抵抗犯罪集团？ 

勒索软体已成全球危机安全产业如何以更创新的手法来抵抗犯罪集团？
 
毫无疑问勒索软体已成为造成企业和个人实际伤害的巨大问题，技术服务供应商正在加紧预备以对抗这些网路攻击－而这种对抗却还没有立竿见影的效果。
今年3月，从报导上面看见卫理公会医院被攻击的情况，当一个勒索软体攻击了他们伺服器上的加密文件后，他们内部营运即濒临紧急状态。骇客要求除非获得大约1600元的比特币，这家位于肯塔基州医院的医生和管理人员就无法存取这些伺服器上的资料。
一个月前，洛杉矶一家医院支付了约17,000美元的「赎金」，才能在类似的骇客攻击下恢复其资料使用。根据好莱坞长老会医疗中心执行长Allen Stefanek的说法：「恢复我们的系统和管理功能最快、最有效的办法就是支付赎金，并获得解密密钥。」
虽然似乎没有人因勒索软体而丧生，但攻击事件滚滚而来－消费者和企业往往别无选择，只能支付赎金，并且通常是用难以追踪的比特币来支付。
据悉，大部份攻击的罪魁祸首是一个叫Locky的复杂木马。Locky在2013年首次出现，它被Avast描述为使用了一流的特性，「例如，域名产生演算法、自订加密通信、TOR或比特币支付、强RSA-2048+AES-128文件加密，以及可以加密超过160种不同的档案类型，包括虚拟磁碟、原始码和资料库。」 今天在网际网路上有许多版本的Locky，这使得与它战斗特别令人沮丧。另一个剧毒的勒索木马称为CryptoLocker ，它以类似的方式工作。
勒索软体的网路攻击行为模式如下：骇客获得接入系统的存取权限，例如接入消费者的PC或企业伺服器。它可能通过下载一个附加到电子邮件的恶意软体、存取一个已安装恶意脚本的恶意网站，或打开一个包含下载恶意软体的恶意巨集(macro)的档案来当作攻击用的载体。大多数的勒索软体攻击的情况是：恶意软体加密了用户的资料，然后，要求一个难以追踪的赎金，以便解密资料或提供密钥给用户来解密。因为资料被加密，就算从电脑删除恶意软体也将无法恢复系统的功能；通常情况下，受害者必须从备份来恢复整个系统，或是支付赎金并期望得到最好的结果。
随着网路攻击的流行，勒索软体已被证明是攻击者最令用户沮丧，并且可获得赎金的有效工具。
当然，除了赎金损失外，还造成了受害者其他的顾虑。一旦恶意软体存取了用户或伺服器资料，意味着未来还要面对的还可能包括了被扫描密码、银行帐户等资讯，或其他类型的敏感知识产权，甚或文件被删除无法再被取回。而且，即使支付了赎金，也不保证能取回文件，看来对付勒索软体的唯一解决之道就是做好「预防」。
勒索软体的范围和影响
2015 年美国联邦调查局(FBI)收到了2,453 宗有关勒索软体网路攻击的投诉。FBI 说，这让受害者付出了超过2,400 万美元的赎金。谁知道还有多少人是默默地付出赎金，或因羞愧，或不知要跟谁说，而没有告知任何人？
一家顶尖的网路安全厂商稳捷网路(Wedge Networks)已经在其监视服务的营运商网路上发现勒索软体网路攻击正在剧烈增加。执行长James Hamilton说：「在这些网路上，我们看到2015年观察到的勒索软体攻击数量比2014年增加了100%，而2016年第一季度行动勒索软体比2015年第四季度增加了50 % 。」
稳捷网路是一家总部位于加拿大阿尔伯塔省的公司，其广泛的客户部署于整个加拿大、美国，和亚太地区。Hamilton先生解释说：「去年，我们在加拿大的客户回报了比我们在美国观察到的勒索软体攻击（百分比）更多。在亚太地区，日本和台湾的勒索软体网路攻击成长速度比东南亚各国缓慢，得归功于这些市场的安全实践较为成熟和先进。」
Hamilton指出：「最近正在与服务供应商讨论勒索软体的防范办法，他们计划在主要的东南亚市场推出安全即服务(Security-as-a-Service)，因为他们发现过去12个月勒索软体在他们的国家变得更加猖獗，这在以前是非常罕见的，但现在正迅速蔓延中。」
总部位于美国加州Menlo公园市的Menlo安全公司欧洲中东和非洲解决方案架构师Jason Steer解释说，虽然对消费者而言他们有时会遗失重要文件，尤其是不可替代的财务文件和个人照片，但勒索软体对企业而言却执行毁灭性的任务。「对于企业来说，勒索软体是他们主要的痛，还会妨碍他们在关键IT相关业务功能的发展。」Steer补充说明Menlo安全公司即专注于恶意软体的预防。「我们已经见过很多客户，他们的每个本机文件和中央伺服器储存的文件已经被勒索软体加密。这会影响每个用户存取网路上的所有中央文件，而且对于任一受影响的用户，勒索软体也加密了他们个人电脑上的所有本机文件。」
影响是什么呢？「你得依赖最近一次备份的时间点是多久之前，因而你有可能无法恢复每一个文件。丢失资料的损失是小还是大要取决于该文件的重要性。」
Cylance最近看到勒索软体一些相当具破坏性的损伤。Cylance是总部设在美国加州欧文市的网路安全公司，该公司花费大量的时间帮助客户防止勒索软体攻击，并帮助新的受害者从木马中恢复过来。Cylance亚太地区区域总监Andy Solterbeck为我们说明了「垂钓者(Angler)」是什么，它是网路攻击利用的工具包，骇客可以利用它来定制自己的攻击－有点类似自己动手做的入门工具包。「垂钓者造成的伤害导致每天9万例的感染，并带来每年至少6,000万美元的损失。」
有这么多的攻击载体，消费者或IT专业人员几乎不可能跟踪了解他们所有的情况。位于美国德州奥斯汀的顶级科技安全分析公司NSS实验室首席架构师Jayendra Pathak表示：「Adobe Flash正在成为传输勒索软体极其麻烦的载体。微软Word攻击也呈上升趋势，它利用人性的弱点打开电子邮件的附件。」 Pathak补充道：「随着网路攻击锁定企业为目标，付几百元作为赎金的日子可能已经过去。最重要的是，勒索软体的作者正转向从事更多瞄准企业的针对性活动。要求数十万美元的赎金很快就会到来。尽管勒索软体是全球各地的问题，但在线上支付系统非常常见的地区更为普遍。美国和欧洲成为主要目标，日本、韩国、中国和新加坡的勒索软体感染率与欧洲和美国相比相对较少。然而，亚太地区国家必须注意美国和欧洲勒索软体攻击的流行，现在正是著手预防性网路安全措施的时候。」
产业的回应
对于消费者而言，防止勒索软体攻击最好的办法就是要主动积极的经常备份，并保持更多备份，以便能将资料恢复至感染之前；不要轻易点开电子邮件附件；使用最新的防病毒和反恶意软体的工具和服务；不要使用缺乏最新保护的旧版本网页浏览器；在微软Word和微软Excel中禁用巨集；并考虑取消安装Adobe Flash。但即便如此，也不保证系统一定能防止勒索软体的攻击。
Steer解释道：「在企业及营运商网路中，有较大规模的工具可以更有效地防止勒索软体的攻击。」例如，Menlo安全公司提供了一个隔离的平台，它确保恶意软体不能接触最终用户的笔记型电脑、PC，或行动电脑，或感染企业伺服器。它可以透过企业的IT和安全专业人员来实施。
隔离是市场上的一个新概念，它帮助组织应对攻击时变得更有弹性。让端点更加安全和健壮，可以确保他们更少被骇，并降低资料外泄和知识产权的损失。Gartner公司认为隔离是预防恶意软体功能的关键，是管理员可以防止他们的用户非因自己的过错而遭遇的不幸。
Steer表示「Menlo技术消除了恶意软体通过遭破坏的或恶意的网站或文件达达用户设备的可能性。用户的Web连线阶段和所有活动内容如影片、JavaScript或Flash，不管是好的还是坏的，都在隔离平台内完全被执行和遏制。只有安全、无恶意软体产生的资讯被传递到用户的端点。没有任何活动内容，包括任何潜在的恶意软体可以离开平台。因此恶意软体没有到达端点的路径，而合法的内容也不必因安全利益而遭封锁，完全不会改变终端用户的浏览体验。」
稳捷网路的客户是营运商和云服务供应商，他们想要在恶意软体－包括勒索软体－接近终端客户的网路或设备之前就发现并阻止它们。
他解释「其中最大的突破就是实现了安全需要从端点和周边范式演变为云端服务的连接形式，以弥补与今天IT模式的差距。网路、用户，和他们的设备不再是静态的。它们是动态的，并不断移动和改变。其结果是，保护网路的唯一方法是保护所有连接到该网路的连接。这只能通过将安全移至网路云端主机来实现，在该处有连接到网路的一切能见度。」
稳捷网路公司的技术如何防范勒索软体？Hamilton说明：「我们的稳捷云端网路防御透过云端技术以支持几乎无限大的规模，并支持那些希望提供安全即服务给他们客户的服务供应商的多租户营运要求。云端网路防御动态地向上或向下调整云端运算资源的规模，以效率和持续的性能来支持其客户广泛变化的安全工作负荷。「换句话说，它可以阻止勒索木马和相关的威胁而不影响网路性能或应用程式的回应时间。」
Cylance的Solterbeck解释们如何解决勒索软体问题：「人工智慧－我们应用机器学习和人工智慧的力量在恶意软体检测的问题上。」这样即使以前从未见过的攻击，Cylance的技术也可以成功地阻止它。「Cylance PROTECT预测网路攻击，并在他们执行前即时地在端点阻止他们－包括像勒索软体、记忆体攻击、未授权的脚本，和特权升级等恶意软体，这些恶意软体能够让骇客完全存取你的系统。」
这个问题将变得更糟
坏消息是：恶意软体，包括勒索软体，处于成长态势。
好消息是：网路安全产业以工具和服务来回应这个态势，这些工具和服务可以帮助保护企业和消费者。然而，市场上总是有恶意软体，勒索软体也不会自动消失。NSS实验室的Pathak说：「没有魔法棒能在近期解决这个问题。打击这种威胁的有效解决方案还是要让应用程式保持更新、不盲目信任通过电子邮件收到的任何东西、完全禁用微软的『巨集』功能，并保持定期备份。」
你最近备份了吗? 如果没有……现在正是时候！
 
 






-----------------------------------------------------------14-----------------------------------------------------------
0X14: 
     [0706]微软迎上IFTTT 推出自动化工具Flow强化自家服务生产力 


微软迎上IFTTT 推出自动化工具Flow强化自家服务生产力
 
4月底，微软宣布推出名为Flow的自动化工具预览版，可连接生产力App并自动化启动App作业，类似IFTTT及Zapier。例如，你可以设定当你在SharePoint加入档案后，让它通知你在Slack上的工作团队。
700)this.width=700" >图片:q1.JPG



-----------------------------------------------------------15-----------------------------------------------------------
0X15: 
     [07.05]对话印度黑客：CloudSec云安全公司创始人Rahul Sasi 

700)this.width=700" >图片:1.JPG



-----------------------------------------------------------16-----------------------------------------------------------
0X16: 
     [07.04]卡巴斯基实验室：今年被勒索的Android用户数是去年的3倍 

行动勒索程式虽不如桌面的勒索软体普及，但这一年来遭遇勒索程式的Android用户为13.6万名，较去年的3.5万名成长超过3倍，行动勒索程式大多不断地以勒索视窗占据萤幕，并要求受害者支付100到200美元以赎回他们的萤幕。
=700) window.open('http://static4.ithome.com.tw/sites/default/files/styles/picture_size_large/public/field/image/app_mointernet_0s_0.jpg?itok=lzVIrdZ5')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >
卡巴斯基实验室（Kaspersky Lab）本周公布了2014年到2016年的勒索软体分析报告，指出行动勒索程式虽然不如桌面勒索软体普及，但这一年来遇到勒索程式的Android用户为13.6万名，远高于去年的3.5万名，行动勒索程式占所有行动恶意程式的比重也从2015年的2.04%成长到今年的4.63%。
当使用者不小心安装了最普遍的Fusob勒索程式之后，它会先侦测装置的语言，以绕过某些国家，继之再把装置资料传送到骇客所控管的C&ampC伺服器，然后等待伺服器传送指令或恶意程式。
↓受害者手机萤幕上会跳出警告画面，与桌面的勒索程式相似，假借政府调查单位警告使用者已违法，要求支付赎金以救回手机。（来源：卡巴斯基实验室）
=700) window.open('http://static4.ithome.com.tw/sites/default/files/images/small-fusob.jpg')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >
然而，行动勒索程式能够发挥的范围是有限的，一来因为Android平台的安全机制并不允许第三方程式不受限地存取使用者档案，因而难以加密行动装置上的档案，二来绝大多数的行动平台都有云端自动备份功能，就算装置上的档案不见了也不必担心。所以行动勒索程式的多数手法是不断地以勒索视窗来占据装置的萤幕，没能进行太复杂的攻击。骇客要求使用者支付100到200美元以赎回他们的萤幕。

该实验室指出，他们的确曾发现有本事加密档案的行动勒索程式，只是不太可能快速普及。





-----------------------------------------------------------17-----------------------------------------------------------
0X17: 
     [07.04]英国脱欧公投，看黑客如何玩「入侵刷票」 

700)this.width=700" >图片:1.JPG



-----------------------------------------------------------18-----------------------------------------------------------
0X18: 
     [07.04]思科为何斥资近3亿美元收购云安全提供商CloudLock？ 

思科（Cisco Systems Inc.）这两天刚刚宣布，即将斥资2.93亿美元收购云安全提供商CloudLock――具体收购方式有现金，也有股票。这家企业来自美国马萨诸塞州，成立于2007年，还是家初创公司，旗下大约有130名员工。其主要业务在于帮助企业客户监督、控制员工更安全地使用云服务。什么意思？往下看。700)this.width=700" >图片:1.JPG



-----------------------------------------------------------19-----------------------------------------------------------
0X19: 
     [06.30]Godless类恶意APP可Root 90%安卓设备 

700)this.width=700" >图片:android-security2.jpg



-----------------------------------------------------------20-----------------------------------------------------------
0X20: 
     [06.30]以色列研究人员实现利用计算机风扇噪音窃听 

 现如今，针对离线计算机的攻击方式真可谓花样百出。最近又有一种攻击方式，利用的是计算机中的散热风扇――通过风扇发出的噪声，就能获取到目标计算机中的数据。
其实这种方法算不上新鲜，先前就已经有研究人员发现，有种恶意程序能够利用计算机扬声器发出的低频信息来获取数据。只要在这台计算机附近放一个麦克风，记录扬声器信息就行。这种方式在过去几年中已经被多次证实，是完全可行的。由于离线计算机通常对安全性的要求非常之高，所以很多管理员就干脆把扬声器去掉了。


风扇噪声如何传输数据？

可是扬声器可以没有，CPU散热风扇总不能也去掉吧。以色列本古里安大学的4名研究人员最近就构造出名为Fansmitter的恶意程序，在感染目标计算机之后，数据发送是通过计算机的风扇进行的。
其实这个道理也很简单：计算机世界最底层的数据表达方式无非就是“1”和“0”，Fansmitter恶意程序能够控制计算机的风扇转速，让风扇可以两种不同的转速工作，分别表达“1”和“0”两种状态。1和0的不同组合，可以表达各类数据。
实际上不仅是CPU风扇，Fansmitter也能控制GPU、主板风扇。研究人员认为，以这种方式“发射”数据的有效范围在1-4米内，至于接收设备，同样是麦克风――或者也可以用智能手机一类具备录音功能的设备。
700)this.width=700" >图片:1.PNG



-----------------------------------------------------------21-----------------------------------------------------------
0X21: 
     [06.30]不需要苹果官方支持，可重置MAC系统固件密码 

安全研究人员fG!发现了一种可以重置iMac和MacBook固件密码的方法，并且不需要苹果公司官方的在线支持。这两款电脑都可以让用户设置一个固件密码，其目的是以防他人未经授权对核心设备设置进行更改。


苹果官方解锁密码

凡是密码，都有忘记的可能性。苹果公司为了预防用户忘记自己设置的固件密码，制作出一套严格的流程让用户可以重置之前设置的固件密码。

假设某用户忘记自己设置的固件密码，他需要重启自己的苹果电脑，并且在重启过程中按住[SHIFT + CONTROL + OPTION + COMMAND + S]不放。随后屏幕上会显示出该电脑特有的一段代码。这时用户需要拨打苹果公司官方的帮助热线。用户提供购买发票和机器显示的代码后，苹果官方会发一个SCBO文件给用户。用户需要把这个文件拷贝在U盘内，随后把这个U盘插入到自己的苹果电脑上。然后自己的设置的固件密码就会被抹除了，用户就可以再重新设置一个固件密码。说了那么多，大家可能听的有些晕了，所以我绘制了一张图表来表达这个流程。
700)this.width=700" >图片:wqeqwe.PNG



-----------------------------------------------------------22-----------------------------------------------------------
0X22: 
     [06.30]ISIS发布“黑客猎杀名单” 

最近一些支持ISIS的黑客组织发布了一份“kill lists（猎杀名单）”，这份名单上出现了3600名美国居民的名字。
=700) window.open('http://image.3001.net/images/20160624/14667383207604.jpg!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >



-----------------------------------------------------------23-----------------------------------------------------------
0X23: 
     [06.30]SWIFT惊天银行大劫案全程分析 



=700) window.open('http://image.3001.net/images/20160629/14671689051012.jpg!small')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >


1.前言
 
最近，使用国际银行业合作SWIFT系统的银行频频发生被盗，是由于SWIFT系统真的存在严重安全问题，还是跟好莱坞大片那样直接撬开银行金库？本文将针对孟加拉国央行被盗的案例进行了技术分析，还原银行被盗的整个过程。
 
本文将分为两大部分：第一部分为孟加拉国央行案例的整体分析，包括孟加拉国央行的风险分析，木马分析，篡改金额等具体技术细节分析，第二部分为科普SWIFT系统基本简介、银行识别代码、报文以及系统架构等知识。
 
如果不熟悉SWIFT整个系统流程的可先阅读第二部分了解SWIFT机制再阅读第一部分的木马分析。
 
2.孟加拉国央行被盗过程还原
 
2.1.事件概述
 
从去年开始，世界范围内使用SWIFT系统的银行相继被曝出盗窃案件，从2015年1月的厄瓜多尔银行损失1200万美元，10月的菲律宾银行，到今年2月孟加拉国央行曝出被盗窃8100万美元。一系列的案件逐渐引起了人们对SWIFT系统的关注，并对SWIFT系统的安全性打上了问号。
 
根据孟加拉国央行人员以及警方消息，孟加拉国央行被盗并非空穴来风，原因是该行缺乏任何防火墙设备，而且使用的是价值10美元的二手交换机，网络结构也没有将SWIFT相关服务器与其他网络做隔离。有进一步的消息表明，孟加拉国央行的技术人员搭建了可以直接访问SWIFT系统的WIFI接入点，只使用了简单的密码保护，另一方面，安装了SWIFT系统的服务器并没有禁用USB接口，这些种种现象表明，该行的网络安全存在各种巨大安全隐患，被黑客盯上只是时间的问题。
 
本报告重点对木马主程序进行了逆向分析，包括行为监控，绕过安全校验机制，篡改金额等进行了分析，覆盖了整个窃取金额的主要流程。对于黑客幕后组织，其他银行SWIFT被盗案例暂不深入分析。
 
从下面的攻击流程概要可以看出：
 
木马程序evtdiag.exe可以用不同的参数来启动，主要功能是以Windows服务启动的进程来实现。通过配置文件读取攻击所需要的信息，如CC服务器地址，SWIFT报文关键字段，收款人等，然后通过实时监听转账交易缓存记录，实时劫持到转账所需要的消息ID，并在数据库中删除该交易记录。接下来恶意程序通过监控日志查找孟加拉国央行的登录行为，如果没有找到则睡眠5秒后再次搜索。当监控到登录行为后，绕过SWIFT客户端的安全机制后，监控关键目录下的缓存报文信息并解析，根据解析结果获得转账账户当前最大可用余额，并成功篡改交易金额和收款人，达到窃取资金的目的。此外恶意程序还劫持打印机篡改需要打印的对账单，避免银行业务人员发现篡改行为，从而延长了银行追查资金的时间，让黑客有更多的时间去洗钱。
 
图片 1_meitu_1.png
 
2.2.攻击前的准备
 
根据第一部分介绍的SWIFT系统基础知识，最容易切入的点非SWIFT接入服务器莫属，攻击者通过种植精心编译的木马得到SWIFT Alliance Access software服务器的权限，重点攻破以下几个关卡达到了窃取非法资金的目的：
 
l 获得SWIFTAlliance Access software控制权
 
l 破解SWIFT报文安全检验机制
 
l 监听目标报文并进行篡改操作并实现对账平衡（主要是转入/转出）
 
l 劫持打印机打印篡改前对账单
根据获取到的信息，恶意软件样本有：
 
SHA1编译时间字节大小文件名备注
525a8e3ae4e3df8c9c61f2a49e38541d196e92282016年2月5日11时46分20秒65,536evtdiag.exe恶意软件 主程序
76bab478dcc70f979ce62cd306e9ba50ee84e37e2016年2月4日13时45分39秒16,384evtsys.exe主程序启动后的服务名
70bf16597e375ad691f2c1efa194dbe7f60e4eeb2016年2月5日8点55分十九秒24,576nroff_b.exe劫持打印机主程序
6207b92842b28a438330a2bf0ee8dcab7ef0a163N / A33,848gpca.dat恶意程序 配置文件
 
从中可以看出攻击者不仅有良好的恶意软件编写功底，还对整个SWIFT架构业务非常熟悉，甚至对数据库的表结构都了如指掌。
 
2.3.恶意文件的启动
 
启动恶意程序evtdiag.exe时接收不同的启动参数，从而达到不同的功能。接收的参数有-svc、-g、-p、resume、pause、on、off、queue，其中on、pause、resume、off、queue都是对打印机功能的操作，-svc参数则是将木马以windows服务方式启动，服务名为evtsys.exe。
 
图片 2_.png
 
在运行时，恶意软件通过读取它的配置文件gpca.dat，该配置文件在服务器的路径如下：
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\gpca.dat
而且通过RC4加密，而密钥如下:
 
4e 38 1f a7 7f 08 cc aa 0d 56 ed ef f9 ed08 ef
该恶意软件还通过以下的文件来记录恶意程序的日志信息：
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\recas.dat
2.4. 实时监控转账交易
 
恶意软件的第二个步骤是开始进行监听SWIFT Financial Application (FIN)报文，重点关注下面目录的*PRC和*fal文件
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcm\in\
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcm\out\
猜测这两个目录保存的转入/转出报文的临时文件，而*PRC和*FAL文件则是转账对应的报文。恶意程序会深入解析这两种格式的文件，根据配置文件gpca.dat定义的字符串进行搜索，定义的字符串如下：
 
“FIN 900 Confirmation of Debit”（FIN 900确认借记）
 
“20: Transaction”（20：交易）
 
“Sender :”（汇款方）
如果搜索到了指定的字符串则会尝试提取MESG_TRN_REF（汇款人）和MESG_SENDER_SWIFT_ADDRESS（汇款人SWIFT地址）信息，紧接着可以通过MESG_TRN_REF（汇款人）和MESG_SENDER_SWIFT_ADDRESS（汇款人的SWIFT地址）这两个值拼接成一个SQL语句，来获得唯一的SWIFT消息ID：
 
SELECT MESG_S_UMID
 
FROM SAAOWNER.MESG_%s
 
WHEREMESG_SENDER_SWIFT_ADDRESS LIKE '%%%s%%' ANDMESG_TRN_REF LIKE '%%%s%%'
 
获得该SWIFT消息ID后，在本地数据库中删除本条交易记录：
 
DELETE FROM SAAOWNER.MESG_%sWHERE MESG_S_UMID = '%s'
 
DELETE FROM SAAOWNER.TEXT_%s WHERE TEXT_S_UMID = '%s'
 
图片 3_.png
 
这里解释一下MESG_S_UMID以及这个操作的含义。根据业内人士介绍，MESG_S_UMID所对应的银行收到的汇款请求ID，该ID对应的记录包含了汇款请求所需要的各种信息，包括转账账户，收款账户，汇款金额，汇款银行等。从业务场景分析来看，被攻击的银行实际是个代理行，在正常的业务流程下，代理行接收到汇款请求后，确认无误后再转发给SWIFT系统的下一个结点，而代理行被攻击的场景下，在数据库中将代理行收到的汇款请求删除，即意味着将正常的汇款交易请求记录在数据库被删除了。
 
接下来所有需要执行的SQL语句都被劫持，并保存到以”SQL”开头的临时文件中，而且所有的SQL语句执行前把数据的异常输出都关闭，确保不被系统或管理员发现异常：
 
SET HEADING OFF
 
SET LINESIZE 32567
 
SET FEEDBACK OFF
 
SET ECHO OFF
 
SET FEED OFF
 
SET VERIFY OFF
 
将SQL临时文件构成后，恶意软件通过以下命令在终端以sysdba的权限来执行SQL语句：
 
cmd.exe /c echo exit |sqlplus -S / assysdba@[SQL_Statements]&gt [OUTPUT_FILE]
图片 4_.png
 
之后恶意程序进入一个循环，它将一直在数据库中搜索包含“登录”的日志记录：
 
 
SELECT *
 
FROM (SELECTJRNL_DISPLAY_TEXT, JRNL_DATE_TIME
 
FROM SAAOWNER.JRNL_%s
 
WHERE JRNL_DISPLAY_TEXT LIKE '%%LT BBHOBDDHA: Log%%' ORDERBY JRNL_DATE_TIME DESC) A
 
WHERE ROWNUM = 1
 
PS：BBHOBDDH为孟加拉国在达卡的SWIFT代码，即孟加拉国央行
 
如果没有搜索到“登录”记录，则休眠5秒，然后再次尝试搜索。
 
如果搜索到“登录”记录，则向C&ampC服务器发送一个GET请求，GET请求格式如下：
 
[C&ampC_server]/al?[data]
data有以下三种情况：
 
―O：Open，检测到登录行为；
 
―C：Close，检测到注销行为；
 
―N：None，没有事件发生。
图片 5_.png
 
2.5.绕过安全机制
 
通过SWIFT的系统架构可以知道在整个SWIFT系统的地区处理机（RP）会将SWIFT访问点（SAP）提交的业务报文进行一系列的安全校验，包括格式，语法，地址代码等信息，如果安全检测不通过则停止往上提交，同时会返回给SAP提示报文错误信息。除了在RP有安全检验外，SWIFT Alliance Access software同样存在安全校验。通过分析得知，SWIFTAlliance Access software的安全校验是依靠挂载了liboradb.dll的进程。
 
恶意软件通过遍历所有的进程信息，如果找到一个挂载了liboradb.dll进程，它会在进程的特定偏移地址更改2个字节数据。实际操作是用NOP指令（0×90,0×90）替换JNZ指令（0×75,0×04），玩过破解的人们都知道这是软件暴力破解最常用的手段之一。这个关键跳的作用就是判断报文是否符合安全校验的关键跳，而报文在SAP/RAP，RP节点只对报文的格式规范进行校验，缺少对安全性的校验，因此可以成功绕过SWIFT的报文安全校验机制。
 
图片 6_.png
 
这样更改的效果是重要的安全检验结果将被忽略，安全校验代码永远执行不了“失败”，而且保存校验结果的eax寄存器都是赋值0（意味着成功）。该liboradb.dll是属于SWIFT’s Alliance software的组件之一，负责的功能有：
 
从注册表中获取数据库的路径
 
启动数据库
 
执行数据库的备份和恢复功能
到目前为止，恶意软件通过修改SWIFT’s Alliance software软件达到劫持的目的，攻击者可以在服务器上操作SWIFT报文和数据库的控制权限。
 
2.6.篡改金额并维持平衡
 
恶意软件从以下目录监听SWIFT报文：
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcp\in\*.* 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcp\out\*.* 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcp\unk\*.* 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcs\nfzp 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcs\nfzf 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcs\fofp 
 
[ROOT_DRIVE]:\Users\Administrator\AppData\Local\Allians\mcs\foff
 
将监听到的报文进行解析，对以下信息进行重点关注：
 
&quot19A: Amount&quot
 
&quot: Debit&quot
 
&quotDebit/Credit :&quot
 
&quotSender :&quot
 
&quotAmount :&quot
 
&quotFEDERAL RESERVE BANK&quot
 
&quot D&quot
 
&quot C&quot
 
&quot62F: &quot
 
“60F: &quot
 
&quot60M: &quot
 
&quot62M: &quot
 
&quotCredit&quot
 
&quotDebit&quot
 
&quot 64: &quot
 
&quot 20: Transaction&quot
 
&quot90B: Price&quot
 
62F：该对帐单结束时的帐面结存的最后余额
 
60F：该对帐单结束时的帐面结存的起始余额
 
19A：该对帐单涉及的交易金额
 
恶意软件通过以上关键字搜索到了所需要的信息，然后通过MESG_S_UMID查询有多少余额可以转账：
 
SELECTMESG_FIN_CCY_AMOUNT FROM SAAOWNER.MESG_%s WHERE MESG_S_UMID = '%s'
另外该恶意软件也可以通过上一步查询到的余额和汇款方SWIFT地址来获得唯一的SWIFT消息ID（MESG_S_UMID ）
 
SELECT MESG_S_UMID
 
FROM SAAOWNER.MESG_%s
 
WHEREMESG_SENDER_SWIFT_ADDRESS LIKE '%%%s%%' AND
 
MESG_FIN_CCY_AMOUNTLIKE '%%%s%%'
 
最后可以通过UPDATE操作，将转账消息中的交易余额更改为之前获得到的最多可用余额
 
（MESG_FIN_CCY_AMOUNT）
 
UPDATE SAAOWNER.MESG_%sSET MESG_FIN_CCY_AMOUNT = '%s' WHERE MESG_S_UMID = '%s'
 
UPDATE SAAOWNER.TEXT_%s SET TEXT_DATA_BLOCK = UTL_RAW.CAST_TO_VARCHAR2('%s')WHERE TEXT_S_UMID = '%s'
 
其中TEXT_DATA_BLOCK字段包含了汇款的金额、收款人信息。变量v27是从sub_40B6F0和sub_40A4C0函数中处理得到的，通过进一步分析sub_40B6F0函数得知，该变量是综合了之前获得的60F，62F，60M，62M等转账汇报信息，经过处理后传输执行SQL语句的函数，最终达到篡改金额的目的。
 
图片 7_.png
 
2.7.欺骗打印机
 
以上的操作已经可以在SWIFT系统中进行任意的转账，但仅仅这些还是不够的，因为SWIFT系统进行转账业务时仍会打印对账单（MT950）进行确认。对账单是通过打印机打印的，这个过程好比个人去银行柜台办理业务时，银行通常会打印办理业务确认信息供客户签字确认，如果打印机直接打印篡改后的转账记录，银行业务员可以在第一时间发现异常行为，这直接会暴露攻击者意图而且转账失败。因此攻击者编写了劫持打印对账单的恶意程序―― nroff_b.exe。
 
通过分析nroff.exe得知，该程序接收以下参数：
 
-p 执行打印机相关操作
 
resume：恢复打印机
 
pause:暂停打印机
 
on：连接打印机
 
off：断开打印机
 
queue：枚举打印机任务
该恶意程序通过劫持要打印的对账单，进行读取，理解并篡改成打印机命令语言（PCL）的PRT文本，然后这个PRT文本通过nroff.exe程序进行提交打印任务，提交打印任务后随即将临时PRT文本彻底删除。
 
3.SWIFT系统基础介绍
 
3.1.SWIFT简介
 
SWIFT又称：“环球同业银行金融电讯协会”，是国际银行同业间的国际合作组织，成立于一九七三年，总部设在比利时的布鲁塞尔，同时在荷兰阿姆斯特丹和美国纽约分别设立交换中心(Swifting Center)，并为各参加国开设集线中心(National Concentration)，为国际金融业务提供快捷、准确、优良的服务。目前全球大多数国家大多数银行已使用SWIFT系统。SWIFT的使用，使银行的结算提供了安全、可靠、快捷、标准化、自动化的通讯业务，从而大大提高了银行的结算速度。
 
3.2.SWIFT银行识别代码
 
每个银行申请加入SWIFT组织时，SWIFT会根据统一原则分配属于本行的SWIFT地址代码（相当于一个银行账户）。银行识别码（Bank Identifier Code―BIC）是由电脑可以自动判读的八位或是十一位英文字母或阿拉伯数字组成，以中国银行北京分行为例：
 
Clipboard Image.png
 
3.3.SWIFT提供的服务
 
接入服务（Connectivity）&#8232包括SWIFT AllianceAccess and Entry 、SWIFTAlliance Gateway 、SWIFTAlliance Webstation 、File TransferInterface 等接入模式；
 
金融信息传送服务（Messaging）&#8232包括SWIFTNetFIN 、SWIFTNet InterAct 、SWIFT FileAct 、SWIFTNeBrowse 等传输模式；
 
交易处理服务（transactionprocessing）&#8232提供交易处理匹配服务、实时报告的双边净额清算服务、支持B2B的商务中的端对端电子支付等；
 
分析服务与分析工具（AnalyticalServices/Tools）&#8232向金融机构提供一些辅助性的服务，即分析服务与分析工具。
 
本次央行被盗的突破口就是接入服务的SWIFT Alliance access software软件服务被种植了转账木马的。
 
3.4.SWIFT报文
 
SWIFT报文共有10类，分别如下：
 
类名称编号是否加密押
1客户付款及支票MT100-199是
2金融机构转账MT200-299是
3外汇金融市场，货币市场及其他MT300-399是
4托收及现金运送单MT400-499是
5证券市场MT500-599是
6贵金属及辛迪加MT600-699是
7跟单信用证及保函MT700-799是
8旅行支票MT800-899是
9现金管理及客户状态MT900-999否
0SWIFT系统报文MT000-099否
银行常用的SWIFT报文格式有：
 
MT100客户汇款；
 
MT200单笔银行头寸调入发报行账户；
 
MT202单笔银行头寸调拨；
 
MT204备付金索汇；
 
MT400付款通知（托收）；
 
MT700开立跟单信用证；
 
MT707跟单信用证的修改；
 
MT900借记证实；
 
MT910贷记证实
 
MT950对账单；
 
MTn95查询；
 
MTn99自由格式。
3.5.SWIFT系统架构
 
SWIFT网络由许多分布在世界各地的计算机和网络设备组成，这些设备在SWIFT网络中称为节点。SWIFT的系统构架图如下：
 
图片 8_.png
 
（1）系统控制处理机（systemcontrol processor，缩写为SCP）
 
整个SWIFT网络的控制集中在整个操作中心，一个在美国，一个在荷兰。SCP负责整个WSIFT网络的正常运行，不断监测直辖市、控制网络中的各种设备、线路和用户访问。在美国、荷兰的操作中心，各有两台SCP，在任何时刻，只有一台处于激活状态，控制整个网络，其余三台SCP处于热备份状态，在激活SCP出现故障时，备份SCP被激活，保证了网络的安全可靠性。
 
（2）片处理机（slice processor，缩写为SP）
 
SP负责电报的存储转发和控制电报的路由选择。目前，两个操作中心各有两台SP处于激活状态，同时每个激活的SP都有一台同型号的SP进行热备份。为适应发报量不断增长的需要，还要陆续增加SP。
 
目前，SWIFT采用UNISYS公司的A系列主机作为SCP和SP。
 
（3）地区处理机（reginalprocessor，缩写为RP）
 
RP是连接SWIFT网络终端（computer based terminal，缩写为CBT）与SWIFT系统的安全有效的逻辑通道，运行在RP上的软件与运行在CBT上的接口软件通讯，所有用户发出的电报都由RP对其格式、语法、地址代码等进行审核，合格后才能发往SP，在电报即将出网进入CBT前，也暂时存在RP上，等待送达接收用户。每台RP基本上承担一个国家的电报处理，所以称之为地区处理机，所有的RP都在美国和荷兰的两大操作中心内。
 
（4）SWIFT访问点（SWIFTAccess Point，缩写为SAP）和远程访问点（RAP）
 
SAP是连接SWIFT骨干网（SWIFT transport network，缩写为STN）的分组交换节点机，他们把SWIFT系统的各种处理机（SCP、SP、RP）和遍布世界的SWIFT用户连接到STN网上。目前，SAP采用北方电讯公司的DPN100交换机，整个SWIFT骨干网有150台左右DPN100交换机（包括备份）。
 
（5）用户与SAP的联接
 
用户访问SWIFT系统需要有一套计算机系统与SWIFT系统相联接，这套计算机系统称为Computer Based Terminal（CBT），CBT中运行的SWIFT接口软件与SWIFT系统通讯。目前有多个计算机公司开发的运行在多种平台上的SWIFT接口软件。
 
CBT支持一个或几个逻辑终端（LT），在一个物理的CBT支持几个LT（即一个用户定义几个LT）的情况下，SWIFT系统将每个LT在逻辑上看成是相互独立的。一个LT必须登陆到SWIFT系统，也就是必须与SWIFT系统的服务应用建立对话关系。
 
3.6.访问SWIFT系统流程
 
在SWIFT系统中，一个LT需要登录到SWIFT系统才可以建立应用对话关系，而SWIFT提供的用户之间的电报交换功能是使用户进入两种SWIFT应用层才能实现的，这两种应用是：GPA（general purpose application）―提供用户与系统有关的各类电报，并能控制用户对FIN应用的访问。FIN（Financial Application）―包括全部用户之间的业务电报和FIN系统电报。一个LT具体的登录流程如下：
 
图片 9_.png
 
4.分析总结
 
从整个攻击过程来看，体现了攻击者对SWIFT系统及业务都十分了解，SWIFT作为全球银行使用最多的结算系统，虽然搭建了专属的网络架构和各种标准与规范，看似安全性极高的系统最近却频频出现被盗的案例。作为企业的防守方，除了分析攻击者的攻击套路外，更多的需要思考如何面对如此高级别的APT攻击，而孟加拉国的央行给我们上了极好的一课。
 
分析完孟加拉国央行整个案例，从事前预防，事中监控，事后审计三个角度来总结：
 
（1）事前预防。从孟加拉国央行的网络环境得知系统的风险点有：
 
网络隔离，服务器如果跟客户端或PC处于同个网络环境，将大大增加服务器的可攻击面，因此建议企业安全人员，尤其是银行业的从业人员，务必要重视网络区域划分，梳理清楚业务的需求，最好可以做到端口级的策略。如果孟加拉国央行可以实现这点，那么木马在运行时访问CC服务器时就能够发现这个异常的行为，从而中止恶意交易请求，减少损失。
 
安全设备，像孟加拉国央行的二手交换机肯定是无法满足安全需求的，而国内在监管部门的推动下，金融机构基本上都有采购专用的网络安全设备。然而使用效率则出现各种情况，据路边社消息有些机器采购后连电源都没有插上。这部分仍需要持续加强部分。
 
访问认证，孟加拉国央行技术人员搭建的WIFI其实是很不安全的做法，同样在国内各个企业都会遇到这样的难题，由于便携式WIFI普及，很多企业员工私自建立个WIFI热点，这些临时WIFI热点通常是个弱口令，这给攻击者带来极大的便利，因为企业员工的计算机通常是可以访问企业内部网络的。
 
终端安全，USB口是企业安全人员容易忽略的部分，目前国内通常在企业服务器的基线配置中会将禁用USB作为安全标准之一，而大部分企业并没有对员工PC的USB口没有禁用，因为USB在工作过程中确实带来很多便利的地方，但同时也是存在风险的地方。
 
（2）事中监控
 
在本次的银行案例中，服务器被种植木马后除了攻击者外谁都没有察觉到木马的存在。在做好事先的网络策略的前提下，企业还可以通过IPS/IDS设备，网络流量异常监控，服务器文件完整性监控，如果是应用软件提供商，还需要在内存中做完整性校验，避免黑客直接在内存中修改程序逻辑。
 
（3）事后审计
 
孟加拉国央行察觉被盗后，由于系统数据库中的交易记录已被恶意程序删除，直接导致事后追查资金十分困难。这也提醒企业在日志记录也要给予足够的重视，事后如果知道4个W（When/Who/What/Where）将大大提高审计的效率，通常关注的日志有网络访问日志，数据库执行日志，操作系统日志，应用程序日志，对于业务系统也要具备完善的日志模块，笔者曾遇到某业务系统，连普通的查询请求都详细的记录到日志模块里。
 
当然，以上几点总结并不足于覆盖整个企业的安全工作，安全工作需要上下一条心，给予足够的重视和推动，才能把安全工作做到位，最终为企业的业务保驾护航。
 
5.附录
 
http://www.treasurer.org.cn/webinfosmains/index/show/54703.html
 
http://baesystemsai.blogspot.jp/2016/04/two-bytes-to-951m.html
 
http://www.freebuf.com/vuls/106026.html
 





-----------------------------------------------------------24-----------------------------------------------------------
0X24: 
     [06.29]Exploit Kit攻击工具包流量锐减96%！这段时间究竟发生了什么？ 

据安全专家所说，最近网络安全威胁的格局发生了极大的变化：来自Security Affairs的数据，自今年4月份以来，整个互联网上Exploit Kit攻击工具包的网络流量锐减了96%。难道是互联网安全形势正变得前途一片大好？


这段时间究竟发生了什么？

从6月1日开始，全球最大的恶意体系结构――Necurs僵尸网络似乎消失了。Necurs先前一直用来传播Dridex、Locky这类安全威胁。
另外两大重要的Exploit Kit攻击工具包，Angler和Nuclear似乎也都消失了。这两者的消失可能与国外执法机构的动作有关。
其中的Nuclear算是相当古老的Exploit Kit，安全专家们上次观察到它的行迹已经是四月底的事情了。当时Check Point还发布了一份很有趣的报告，提到Nuclear背后的黑客每个月几乎都能赚到10万美元的收入。
=700) window.open('http://image.3001.net/images/20160622/14665769076349.png')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >
据赛门铁克的专家所说，从5月第一周开始，就已经没再看到Nuclear的活跃身影了。至于Angler，赛门铁克的分析师表示：

“Angler的消失也让CryptXXX勒索软件（Trojan.Cryptolocker.AN）活跃性大减。Angler原本一直是CrypXXX输出的主要途经。Angler并非近期唯一离场的Exploit Kit。著名的Nuclear从5月开始就不活跃了――鉴于距今已经有1个月了，不知此事是否与近期的开发工作有关。”Proofpoint上周公布了上面这张图，数据中倒是有提到Nuclear实际上在5月下半月的时候还是处在活跃状态的。至于Angler的消失，可能与执法机关的行动有关：俄罗斯当局最近发起了近50次逮捕行动，都与Lurk恶意程序相关。
这些都是Exploit Kit相关流量锐减多达96%的重要原因。


然而也别高兴得太早

在Proofpoint的专家看来，Angler和Nuclear的消失促成了其他Exploit Kit的成长，主要是Neutrino和RIG：

“Neutrino自其诞生以来就在稳步上升，最近又伴随5月中旬的时候Angler流量锐减，Nuclear也受到很大的影响。Angler和Nuclear活跃性大幅下降，甚至到活跃性几乎为零的程度，这与攻击者转往如Neutrino这样的Exploit Kit也有关。从一款攻击工具转往另一款攻击工具并不新鲜，而且很多攻击者平常也不仅使用一款攻击工具。不过除了今年1月份之外，Angler的确长期统领着Exploit Kit市场。”
“我们预计，Neutrino对CryptXXX产生很大影响，Exploit Kit流量中至多75%的流量受到影响，另外还有10%则是由于Cerber勒索软件活跃性降低造成的（Neutrino和Magnitude一起）。还有15%，主要是RIG拉低了各类恶意广告流量，还有一些应用规模较小的Exploit Kit，如Sundown、Kaixin、Hunter等等――这些对Exploit Kit相关流量的影响大约也就1%。”
=700) window.open('http://image.3001.net/images/20160622/14665769373101.png')" style="max-width:700pxmax-height:700px" onload="if(is_ie6&&this.offsetWidth>700)this.width=700" >
卡巴斯基实验室基本也确认了上述趋势，即黑客组织都开始转而采用Neutrino和RIG。至于未来会怎样，这就很难说了。从趋势来看，这次恶意流量的锐减，实际上也只是黑客改用其他武器的过程。


* 参考来源：Security Affairs




